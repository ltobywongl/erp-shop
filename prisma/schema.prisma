generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           String    @id @db.VarChar(36)
  email        String    @unique(map: "users_unique_1") @db.VarChar(100)
  username     String    @unique(map: "users_unique") @db.VarChar(32)
  password     String    @db.VarChar(100)
  role         String    @default("user") @db.VarChar(36)
  balance      Float     @default(0.00)
  couponPoints Int       @default(0) @map("coupon_points")
  createdAt    DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt    DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt    DateTime? @map("deleted_at") @db.DateTime(0)
  coupons      Coupon[]
  orders       Order[]
  topups       topups[]

  @@map("users")
}

model Coupon {
  id               String         @id @db.VarChar(36)
  userId           String         @map("user_id") @db.VarChar(36)
  couponCategoryId String         @map("coupon_categories_id") @db.VarChar(36)
  createdAt        DateTime       @default(now()) @map("created_at") @db.DateTime(0)
  usedAt           DateTime?      @map("used_at") @db.DateTime(0)
  couponCategory   CouponCategory @relation(fields: [couponCategoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "coupons_coupon_categories_FK")
  user             User           @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "coupons_users_FK")

  @@index([couponCategoryId], map: "coupons_coupon_categories_FK")
  @@index([userId], map: "coupons_users_FK")
  @@map("coupons")
}

model Category {
  id        String    @id @db.VarChar(36)
  name      String    @db.VarChar(30)
  discount  Float     @default(0.00)
  createdAt DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  deletedAt DateTime? @map("deleted_at") @db.DateTime(0)
  products  Product[]

  @@map("categories")
}

model CouponCategory {
  id          String    @id @db.VarChar(36)
  name        String?   @db.VarChar(20)
  description String?   @db.VarChar(255)
  point       Int
  value       Decimal   @db.Decimal(15, 2)
  active      Boolean   @default(false)
  createdAt   DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt   DateTime  @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt   DateTime? @map("deleted_at") @db.DateTime(0)
  coupons     Coupon[]

  @@map("coupon_categories")
}

model Enquiry {
  id        String   @id @db.VarChar(36)
  content   String   @db.Text
  userId    String   @map("user_id") @db.VarChar(36)
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)

  @@map("enquiries")
}

model OrderItem {
  id        String   @id @db.VarChar(36)
  productId String   @map("product_id") @db.VarChar(36)
  quantity  Int
  createdAt DateTime @default(now()) @map("created_at") @db.DateTime(0)
  product   Product  @relation(fields: [productId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "order_items_products_FK")

  @@index([productId], map: "order_items_products_FK")
  @@map("order_items")
}

model Order {
  id              String    @id @db.VarChar(36)
  userId          String    @map("user_id") @db.VarChar(36)
  totalPrice      Float     @map("total_price")
  paymentPath     String?   @map("payment_path") @db.VarChar(255)
  paymentApproved Boolean   @default(false) @map("payment_approved")
  createdAt       DateTime  @default(now()) @map("created_at") @db.DateTime(0)
  deletedAt       DateTime? @map("deleted_at") @db.DateTime(0)
  user            User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "orders_users_FK")

  @@index([userId], map: "orders_users_FK")
  @@map("orders")
}

model Product {
  id          String      @id @db.VarChar(36)
  categoryId  String      @map("categories_id") @db.VarChar(36)
  name        String      @db.VarChar(100)
  description String?     @db.VarChar(255)
  image       String?     @db.VarChar(255)
  price       Float
  stock       Int         @default(0)
  discount    Float       @default(0.00)
  couponPoint Int         @map("coupon_point")
  createdAt   DateTime    @default(now()) @map("created_at") @db.DateTime(0)
  updatedAt   DateTime    @default(now()) @updatedAt @map("updated_at") @db.DateTime(0)
  deletedAt   DateTime?   @map("deleted_at") @db.DateTime(0)
  orderItems  OrderItem[]
  category    Category    @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "products_categories_FK")

  @@index([categoryId], map: "products_categories_FK")
  @@map("products")
}

model topups {
  id         String   @id @db.VarChar(36)
  user_id    String   @db.VarChar(36)
  amount     Float
  image_path String   @db.VarChar(100)
  approved   Boolean  @default(false)
  created_at DateTime @default(now()) @db.DateTime(0)
  updated_at DateTime @default(now()) @db.DateTime(0)
  users      User     @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "topups_users_FK")

  @@index([user_id], map: "topups_users_FK")
}
